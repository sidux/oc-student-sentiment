name: Deploy Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set Azure Environment Variables
      - name: Set Azure Environment Variables
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: echo "Azure environment variables set."

      # Azure Login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.ARM_CLIENT_ID }}",
              "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.ARM_TENANT_ID }}"
            }

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Clean Terraform Cache
      - name: Clean Terraform Cache
        run: rm -rf terraform/.terraform

      # Initialize Terraform
      - name: Initialize Terraform
        run: terraform -chdir=terraform init

      # Check Terraform Formatting
      - name: Check Terraform Formatting
        run: terraform -chdir=terraform fmt -check

      # Validate Terraform Configuration
      - name: Validate Terraform Configuration
        run: terraform -chdir=terraform validate

      # Terraform Plan
      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform plan -out=tfplan

      # Terraform Apply
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && steps.plan.outcome == 'success'
        run: terraform -chdir=terraform apply -auto-approve tfplan

      # Upload Terraform State
      - name: Upload Terraform State
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: terraform-state
          path: terraform/.terraform/
          retention-days: 5

      # Docker login
      - name: Docker login
        run: |
          az acr login --name alocpath

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build -t alocpath.azurecr.io/oc-student-sentiment:latest .
          docker push alocpath.azurecr.io/oc-student-sentiment:latest

      # Output App URL
      - name: Output App URL
        run: |
          echo "App URL: $(terraform -chdir=terraform output -raw app_service_url)"
